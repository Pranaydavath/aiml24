import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

data = pd.read_csv("salary_data.csv")
data.head()
data.isnull().sum()

X = data.iloc[:, :-1].values  # Use all columns except the last one
y = data.iloc[:, -1].values

X_train, X_test, Y_train, Y_test = train_test_split(X, y, test_size=0.2, random_state=0)

regressor = LinearRegression()
regressor.fit(X_train, Y_train)

print("Accuracy", regressor.score(X_test, Y_test))

# Intercept and Coefficient
print("Intercept: ", regressor.intercept_)
print("Coefficient: ", regressor.coef_)

# Prediction of the test set
y_pred_slr = regressor.predict(X_test)

# Predicted values
print("Prediction for the test set: {}".format(y_pred_slr))

# Actual value and the predicted value
regressor_diff = pd.DataFrame({'Actual value': Y_test, 'Predicted value': y_pred_slr})
print(regressor_diff.head())

# Line of best fit
plt.scatter(X_test, Y_test)
plt.plot(X_test, y_pred_slr, 'r')
plt.show()
